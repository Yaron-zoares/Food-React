{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05E7\\u05D5\\u05E8\\u05E1 \\u05DE\\u05E4\\u05EA\\u05D7\\u05D9 AI\\\\PROJECT AI\\\\FoodAPP\\\\cuisineBotApp\\\\src\\\\components\\\\IngredientSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { allRecipes } from '../data/allRecipes.js';\nimport './IngredientSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IngredientSearch = ({\n  onSearch\n}) => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleIngredientChange = e => {\n    setIngredients(e.target.value);\n  };\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  // Helper: normalize and split input to array (comma, space, or both)\n  const parseIngredients = input => {\n    return input.replace(/[,\\s]+/g, ',') // replace spaces and commas with a single comma\n    .split(',').map(ing => ing.trim()).filter(ing => ing.length > 0);\n  };\n  const searchRecipes = (ingredients, searchTerm) => {\n    let results = [...allRecipes];\n    // Only search by ingredients if there are 2 or more\n    if (ingredients && ingredients.length >= 2) {\n      results = results.filter(recipe => {\n        // Support Hebrew: check both recipe.ingredients and recipe.translations?.hebrew?.ingredients\n        const allRecipeIngredients = [...(recipe.ingredients || []), ...(recipe.translations && recipe.translations.he && recipe.translations.he.ingredients || [])];\n        return ingredients.every(ingredient => allRecipeIngredients.some(recipeIngredient => recipeIngredient.toLowerCase().includes(ingredient.toLowerCase())));\n      });\n    } else if (ingredients && ingredients.length === 1) {\n      // If only one ingredient, don't show any recipes\n      results = [];\n    }\n    // Search by recipe name or tags (if searchTerm is provided)\n    if (searchTerm) {\n      results = results.filter(recipe => recipe.name.toLowerCase().includes(searchTerm.toLowerCase()) || recipe.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase())));\n    }\n    return results;\n  };\n  const handleSearch = () => {\n    const ingredientList = parseIngredients(ingredients);\n    const searchResults = searchRecipes(ingredientList, searchTerm.trim());\n    if (onSearch) {\n      onSearch(searchResults);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-search\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingredients\",\n          children: \"Ingredients (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ingredients\",\n          value: ingredients,\n          onChange: handleIngredientChange,\n          onKeyPress: handleKeyPress,\n          placeholder: \"e.g., chicken, rice, tomatoes / \\u05E2\\u05D5\\u05E3, \\u05D0\\u05D5\\u05E8\\u05D6, \\u05E2\\u05D2\\u05D1\\u05E0\\u05D9\\u05D9\\u05D4\",\n          className: \"ingredient-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"search\",\n          children: \"Search recipes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          onKeyPress: handleKeyPress,\n          placeholder: \"Search for recipes...\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"search-button\",\n        disabled: !ingredients && !searchTerm || parseIngredients(ingredients).length === 1,\n        children: \"Search Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(IngredientSearch, \"IK6DcU5mq3ZUihT/eaZLyCTecyo=\");\n_c = IngredientSearch;\nexport default IngredientSearch;\nvar _c;\n$RefreshReg$(_c, \"IngredientSearch\");","map":{"version":3,"names":["React","useState","allRecipes","jsxDEV","_jsxDEV","IngredientSearch","onSearch","_s","ingredients","setIngredients","searchTerm","setSearchTerm","handleIngredientChange","e","target","value","handleSearchChange","parseIngredients","input","replace","split","map","ing","trim","filter","length","searchRecipes","results","recipe","allRecipeIngredients","translations","he","every","ingredient","some","recipeIngredient","toLowerCase","includes","name","tags","tag","handleSearch","ingredientList","searchResults","handleKeyPress","key","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onKeyPress","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/קורס מפתחי AI/PROJECT AI/FoodAPP/cuisineBotApp/src/components/IngredientSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { allRecipes } from '../data/allRecipes.js';\r\nimport './IngredientSearch.css';\r\n\r\nconst IngredientSearch = ({ onSearch }) => {\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleIngredientChange = (e) => {\r\n    setIngredients(e.target.value);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  // Helper: normalize and split input to array (comma, space, or both)\r\n  const parseIngredients = (input) => {\r\n    return input\r\n      .replace(/[,\\s]+/g, ',') // replace spaces and commas with a single comma\r\n      .split(',')\r\n      .map(ing => ing.trim())\r\n      .filter(ing => ing.length > 0);\r\n  };\r\n\r\n  const searchRecipes = (ingredients, searchTerm) => {\r\n    let results = [...allRecipes];\r\n    // Only search by ingredients if there are 2 or more\r\n    if (ingredients && ingredients.length >= 2) {\r\n      results = results.filter(recipe => {\r\n        // Support Hebrew: check both recipe.ingredients and recipe.translations?.hebrew?.ingredients\r\n        const allRecipeIngredients = [\r\n          ...(recipe.ingredients || []),\r\n          ...((recipe.translations && recipe.translations.he && recipe.translations.he.ingredients) || [])\r\n        ];\r\n        return ingredients.every(ingredient =>\r\n          allRecipeIngredients.some(recipeIngredient =>\r\n            recipeIngredient.toLowerCase().includes(ingredient.toLowerCase())\r\n          )\r\n        );\r\n      });\r\n    } else if (ingredients && ingredients.length === 1) {\r\n      // If only one ingredient, don't show any recipes\r\n      results = [];\r\n    }\r\n    // Search by recipe name or tags (if searchTerm is provided)\r\n    if (searchTerm) {\r\n      results = results.filter(recipe =>\r\n        recipe.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        recipe.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n    return results;\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const ingredientList = parseIngredients(ingredients);\r\n    const searchResults = searchRecipes(ingredientList, searchTerm.trim());\r\n    if (onSearch) {\r\n      onSearch(searchResults);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ingredient-search\">\r\n      <div className=\"search-container\">\r\n        <div className=\"search-section\">\r\n          <label htmlFor=\"ingredients\">Ingredients (comma-separated):</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"ingredients\"\r\n            value={ingredients}\r\n            onChange={handleIngredientChange}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"e.g., chicken, rice, tomatoes / עוף, אורז, עגבנייה\"\r\n            className=\"ingredient-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"search-section\">\r\n          <label htmlFor=\"search\">Search recipes:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Search for recipes...\"\r\n            className=\"search-input\"\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          onClick={handleSearch}\r\n          className=\"search-button\"\r\n          disabled={(!ingredients && !searchTerm) || (parseIngredients(ingredients).length === 1)}\r\n        >\r\n          Search Recipes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}