{"ast":null,"code":"// allRecipes.js\n\nimport { italianRecipes } from './italianRecipes.js';\nimport { middleEasternRecipes } from './middleEasternRecipes.js';\nimport { spanishRecipes } from './spanishRecipes.js';\nimport { frenchRecipes } from './frenchRecipes.js';\nimport { latinRecipes } from './latinRecipes.js';\nimport { turkishRecipes } from './turkishRecipes.js';\nimport { translateRecipes, getCurrentLanguage } from '../translations/translationUtils.js';\n\n// Combine all recipes into one array\nexport const allRecipes = [...italianRecipes, ...middleEasternRecipes, ...spanishRecipes, ...frenchRecipes, ...latinRecipes, ...turkishRecipes].map(recipe => {\n  // Normalize cuisine names for consistency\n  const normalizedRecipe = {\n    ...recipe\n  };\n\n  // Middle Eastern variations\n  if (['ישראלי', 'ערבי', 'לבנוני'].includes(recipe.cuisine)) {\n    normalizedRecipe.cuisine = 'Middle Eastern';\n  }\n\n  // Latin American variations\n  if (recipe.cuisine === 'אמריקה לטינית') {\n    normalizedRecipe.cuisine = 'Latin American';\n  }\n\n  // Italian variations\n  if (recipe.cuisine === 'איטלקי') {\n    normalizedRecipe.cuisine = 'Italian';\n  }\n\n  // French variations\n  if (recipe.cuisine === 'צרפתי') {\n    normalizedRecipe.cuisine = 'French';\n  }\n\n  // Spanish variations\n  if (recipe.cuisine === 'ספרדי') {\n    normalizedRecipe.cuisine = 'Spanish';\n  }\n\n  // Turkish variations\n  if (recipe.cuisine === 'טורקי') {\n    normalizedRecipe.cuisine = 'Turkish';\n  }\n  return normalizedRecipe;\n});\n\n// Function to get recipes in the current language\nexport const getRecipesInCurrentLanguage = () => {\n  const currentLanguage = getCurrentLanguage();\n  return translateRecipes(allRecipes, currentLanguage);\n};\n\n// Helper functions for filtering recipes\nexport const getRecipesByCuisine = cuisine => {\n  return allRecipes.filter(recipe => recipe.cuisine === cuisine);\n};\nexport const getRecipesByDishType = dishType => {\n  return allRecipes.filter(recipe => recipe.dishType === dishType);\n};\nexport const getRecipesByDietaryOption = dietaryOption => {\n  return allRecipes.filter(recipe => recipe.dietaryOptions && recipe.dietaryOptions.includes(dietaryOption));\n};\nexport const getRecipesByDifficulty = difficulty => {\n  return allRecipes.filter(recipe => recipe.difficulty === difficulty);\n};\nexport const searchRecipes = searchTerm => {\n  const term = searchTerm.toLowerCase();\n  return allRecipes.filter(recipe => recipe.name.toLowerCase().includes(term) || recipe.tags.some(tag => tag.toLowerCase().includes(term)) || recipe.ingredients.some(ingredient => ingredient.toLowerCase().includes(term)));\n};\n\n// Get unique values for filters\nexport const getAllCuisines = () => {\n  return [...new Set(allRecipes.map(recipe => recipe.cuisine))];\n};\nexport const getAllDishTypes = () => {\n  return [...new Set(allRecipes.map(recipe => recipe.dishType))];\n};\nexport const getAllDietaryOptions = () => {\n  const allOptions = allRecipes.flatMap(recipe => recipe.dietaryOptions || []);\n  return [...new Set(allOptions)];\n};\nexport const getAllDifficulties = () => {\n  return [...new Set(allRecipes.map(recipe => recipe.difficulty))];\n};\nexport const getAllTags = () => {\n  const allTags = allRecipes.flatMap(recipe => recipe.tags || []);\n  return [...new Set(allTags)];\n};","map":{"version":3,"names":["italianRecipes","middleEasternRecipes","spanishRecipes","frenchRecipes","latinRecipes","turkishRecipes","translateRecipes","getCurrentLanguage","allRecipes","map","recipe","normalizedRecipe","includes","cuisine","getRecipesInCurrentLanguage","currentLanguage","getRecipesByCuisine","filter","getRecipesByDishType","dishType","getRecipesByDietaryOption","dietaryOption","dietaryOptions","getRecipesByDifficulty","difficulty","searchRecipes","searchTerm","term","toLowerCase","name","tags","some","tag","ingredients","ingredient","getAllCuisines","Set","getAllDishTypes","getAllDietaryOptions","allOptions","flatMap","getAllDifficulties","getAllTags","allTags"],"sources":["D:/קורס מפתחי AI/PROJECT AI/FoodAPP/cuisineBotApp/src/data/allRecipes.js"],"sourcesContent":["// allRecipes.js\r\n\r\nimport { italianRecipes } from './italianRecipes.js';\r\nimport { middleEasternRecipes } from './middleEasternRecipes.js';\r\nimport { spanishRecipes } from './spanishRecipes.js';\r\nimport { frenchRecipes } from './frenchRecipes.js';\r\nimport { latinRecipes } from './latinRecipes.js';\r\nimport { turkishRecipes } from './turkishRecipes.js';\r\nimport { translateRecipes, getCurrentLanguage } from '../translations/translationUtils.js';\r\n\r\n// Combine all recipes into one array\r\nexport const allRecipes = [\r\n  ...italianRecipes,\r\n  ...middleEasternRecipes,\r\n  ...spanishRecipes,\r\n  ...frenchRecipes,\r\n  ...latinRecipes,\r\n  ...turkishRecipes\r\n].map(recipe => {\r\n  // Normalize cuisine names for consistency\r\n  const normalizedRecipe = { ...recipe };\r\n  \r\n  // Middle Eastern variations\r\n  if (['ישראלי', 'ערבי', 'לבנוני'].includes(recipe.cuisine)) {\r\n    normalizedRecipe.cuisine = 'Middle Eastern';\r\n  }\r\n  \r\n  // Latin American variations\r\n  if (recipe.cuisine === 'אמריקה לטינית') {\r\n    normalizedRecipe.cuisine = 'Latin American';\r\n  }\r\n  \r\n  // Italian variations\r\n  if (recipe.cuisine === 'איטלקי') {\r\n    normalizedRecipe.cuisine = 'Italian';\r\n  }\r\n  \r\n  // French variations\r\n  if (recipe.cuisine === 'צרפתי') {\r\n    normalizedRecipe.cuisine = 'French';\r\n  }\r\n  \r\n  // Spanish variations\r\n  if (recipe.cuisine === 'ספרדי') {\r\n    normalizedRecipe.cuisine = 'Spanish';\r\n  }\r\n  \r\n  // Turkish variations\r\n  if (recipe.cuisine === 'טורקי') {\r\n    normalizedRecipe.cuisine = 'Turkish';\r\n  }\r\n  \r\n  return normalizedRecipe;\r\n});\r\n\r\n// Function to get recipes in the current language\r\nexport const getRecipesInCurrentLanguage = () => {\r\n  const currentLanguage = getCurrentLanguage();\r\n  return translateRecipes(allRecipes, currentLanguage);\r\n};\r\n\r\n// Helper functions for filtering recipes\r\nexport const getRecipesByCuisine = (cuisine) => {\r\n  return allRecipes.filter(recipe => recipe.cuisine === cuisine);\r\n};\r\n\r\nexport const getRecipesByDishType = (dishType) => {\r\n  return allRecipes.filter(recipe => recipe.dishType === dishType);\r\n};\r\n\r\nexport const getRecipesByDietaryOption = (dietaryOption) => {\r\n  return allRecipes.filter(recipe => \r\n    recipe.dietaryOptions && recipe.dietaryOptions.includes(dietaryOption)\r\n  );\r\n};\r\n\r\nexport const getRecipesByDifficulty = (difficulty) => {\r\n  return allRecipes.filter(recipe => recipe.difficulty === difficulty);\r\n};\r\n\r\nexport const searchRecipes = (searchTerm) => {\r\n  const term = searchTerm.toLowerCase();\r\n  return allRecipes.filter(recipe => \r\n    recipe.name.toLowerCase().includes(term) ||\r\n    recipe.tags.some(tag => tag.toLowerCase().includes(term)) ||\r\n    recipe.ingredients.some(ingredient => ingredient.toLowerCase().includes(term))\r\n  );\r\n};\r\n\r\n// Get unique values for filters\r\nexport const getAllCuisines = () => {\r\n  return [...new Set(allRecipes.map(recipe => recipe.cuisine))];\r\n};\r\n\r\nexport const getAllDishTypes = () => {\r\n  return [...new Set(allRecipes.map(recipe => recipe.dishType))];\r\n};\r\n\r\nexport const getAllDietaryOptions = () => {\r\n  const allOptions = allRecipes.flatMap(recipe => recipe.dietaryOptions || []);\r\n  return [...new Set(allOptions)];\r\n};\r\n\r\nexport const getAllDifficulties = () => {\r\n  return [...new Set(allRecipes.map(recipe => recipe.difficulty))];\r\n};\r\n\r\nexport const getAllTags = () => {\r\n  const allTags = allRecipes.flatMap(recipe => recipe.tags || []);\r\n  return [...new Set(allTags)];\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}