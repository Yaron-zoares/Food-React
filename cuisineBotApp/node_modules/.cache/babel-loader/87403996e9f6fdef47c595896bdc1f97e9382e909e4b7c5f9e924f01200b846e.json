{"ast":null,"code":"// LanguageSelector.js\n\nimport { getCurrentLanguage, setCurrentLanguage } from '../translations/translationUtils.js';\nimport { supportedLanguages } from '../config.is/config.js';\nexport class LanguageSelector {\n  constructor(containerId) {\n    this.container = document.getElementById(containerId);\n    this.currentLanguage = getCurrentLanguage();\n    this.init();\n  }\n  init() {\n    this.render();\n    this.attachEventListeners();\n  }\n  render() {\n    if (!this.container) return;\n    this.container.innerHTML = `\n      <div class=\"language-selector\">\n        <label for=\"language-select\">Language / שפה:</label>\n        <select id=\"language-select\" class=\"language-select\">\n          ${supportedLanguages.map(lang => `\n            <option value=\"${lang}\" ${lang === this.currentLanguage ? 'selected' : ''}>\n              ${lang === 'en' ? 'English' : 'עברית'}\n            </option>\n          `).join('')}\n        </select>\n      </div>\n    `;\n  }\n  attachEventListeners() {\n    const select = this.container.querySelector('#language-select');\n    if (select) {\n      select.addEventListener('change', e => {\n        const newLanguage = e.target.value;\n        this.changeLanguage(newLanguage);\n      });\n    }\n  }\n  changeLanguage(newLanguage) {\n    this.currentLanguage = newLanguage;\n    setCurrentLanguage(newLanguage);\n\n    // Dispatch custom event to notify other components\n    const event = new CustomEvent('languageChanged', {\n      detail: {\n        language: newLanguage\n      }\n    });\n    document.dispatchEvent(event);\n\n    // Re-render the selector\n    this.render();\n    this.attachEventListeners();\n  }\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n}\n\n// CSS styles for the language selector\nexport const languageSelectorStyles = `\n  .language-selector {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n    background-color: #f8f9fa;\n    border-radius: 8px;\n    margin-bottom: 20px;\n  }\n\n  .language-selector label {\n    font-weight: 600;\n    color: #333;\n    margin: 0;\n  }\n\n  .language-select {\n    padding: 8px 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    background-color: white;\n    font-size: 14px;\n    cursor: pointer;\n    transition: border-color 0.2s ease;\n  }\n\n  .language-select:hover {\n    border-color: #007bff;\n  }\n\n  .language-select:focus {\n    outline: none;\n    border-color: #007bff;\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n  }\n\n  /* RTL support for Hebrew */\n  [dir=\"rtl\"] .language-selector {\n    flex-direction: row-reverse;\n  }\n\n  [dir=\"rtl\"] .language-selector label {\n    text-align: right;\n  }\n`;\n\n// Function to inject styles\nexport const injectLanguageSelectorStyles = () => {\n  if (!document.getElementById('language-selector-styles')) {\n    const style = document.createElement('style');\n    style.id = 'language-selector-styles';\n    style.textContent = languageSelectorStyles;\n    document.head.appendChild(style);\n  }\n};\n\n// Function to initialize language selector\nexport const initLanguageSelector = containerId => {\n  injectLanguageSelectorStyles();\n  return new LanguageSelector(containerId);\n};","map":{"version":3,"names":["getCurrentLanguage","setCurrentLanguage","supportedLanguages","LanguageSelector","constructor","containerId","container","document","getElementById","currentLanguage","init","render","attachEventListeners","innerHTML","map","lang","join","select","querySelector","addEventListener","e","newLanguage","target","value","changeLanguage","event","CustomEvent","detail","language","dispatchEvent","languageSelectorStyles","injectLanguageSelectorStyles","style","createElement","id","textContent","head","appendChild","initLanguageSelector"],"sources":["D:/קורס מפתחי AI/PROJECT AI/FoodAPP/cuisineBotApp/src/components/LanguageSelector.js"],"sourcesContent":["// LanguageSelector.js\r\n\r\nimport { getCurrentLanguage, setCurrentLanguage } from '../translations/translationUtils.js';\r\nimport { supportedLanguages } from '../config.is/config.js';\r\n\r\nexport class LanguageSelector {\r\n  constructor(containerId) {\r\n    this.container = document.getElementById(containerId);\r\n    this.currentLanguage = getCurrentLanguage();\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.render();\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  render() {\r\n    if (!this.container) return;\r\n\r\n    this.container.innerHTML = `\r\n      <div class=\"language-selector\">\r\n        <label for=\"language-select\">Language / שפה:</label>\r\n        <select id=\"language-select\" class=\"language-select\">\r\n          ${supportedLanguages.map(lang => `\r\n            <option value=\"${lang}\" ${lang === this.currentLanguage ? 'selected' : ''}>\r\n              ${lang === 'en' ? 'English' : 'עברית'}\r\n            </option>\r\n          `).join('')}\r\n        </select>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  attachEventListeners() {\r\n    const select = this.container.querySelector('#language-select');\r\n    if (select) {\r\n      select.addEventListener('change', (e) => {\r\n        const newLanguage = e.target.value;\r\n        this.changeLanguage(newLanguage);\r\n      });\r\n    }\r\n  }\r\n\r\n  changeLanguage(newLanguage) {\r\n    this.currentLanguage = newLanguage;\r\n    setCurrentLanguage(newLanguage);\r\n    \r\n    // Dispatch custom event to notify other components\r\n    const event = new CustomEvent('languageChanged', {\r\n      detail: { language: newLanguage }\r\n    });\r\n    document.dispatchEvent(event);\r\n    \r\n    // Re-render the selector\r\n    this.render();\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  getCurrentLanguage() {\r\n    return this.currentLanguage;\r\n  }\r\n}\r\n\r\n// CSS styles for the language selector\r\nexport const languageSelectorStyles = `\r\n  .language-selector {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    background-color: #f8f9fa;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .language-selector label {\r\n    font-weight: 600;\r\n    color: #333;\r\n    margin: 0;\r\n  }\r\n\r\n  .language-select {\r\n    padding: 8px 12px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    background-color: white;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: border-color 0.2s ease;\r\n  }\r\n\r\n  .language-select:hover {\r\n    border-color: #007bff;\r\n  }\r\n\r\n  .language-select:focus {\r\n    outline: none;\r\n    border-color: #007bff;\r\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\r\n  }\r\n\r\n  /* RTL support for Hebrew */\r\n  [dir=\"rtl\"] .language-selector {\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  [dir=\"rtl\"] .language-selector label {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\n// Function to inject styles\r\nexport const injectLanguageSelectorStyles = () => {\r\n  if (!document.getElementById('language-selector-styles')) {\r\n    const style = document.createElement('style');\r\n    style.id = 'language-selector-styles';\r\n    style.textContent = languageSelectorStyles;\r\n    document.head.appendChild(style);\r\n  }\r\n};\r\n\r\n// Function to initialize language selector\r\nexport const initLanguageSelector = (containerId) => {\r\n  injectLanguageSelectorStyles();\r\n  return new LanguageSelector(containerId);\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}