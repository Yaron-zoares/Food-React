{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05E7\\u05D5\\u05E8\\u05E1 \\u05DE\\u05E4\\u05EA\\u05D7\\u05D9 AI\\\\PROJECT AI\\\\FoodAPP\\\\cuisineBotApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport IngredientSearch from \"./components/IngredientSearch\";\nimport FilterPanel from \"./components/FilterPanel\";\nimport RecipeList from \"./components/RecipeList\";\nimport Footer from \"./components/Footer\";\nimport \"../App.css\";\nimport \"../styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [filters, setFilters] = useState(null);\n  const handleSearch = searchData => {\n    // In a real app, this would call an API\n    console.log('Search data:', searchData);\n\n    // For now, we'll just set some mock search results\n    if (searchData.ingredients.length > 0 || searchData.searchTerm) {\n      // Mock search results - in real app, this would come from API\n      const mockResults = [{\n        id: 7,\n        title: \"Pasta with \" + (searchData.ingredients[0] || searchData.searchTerm),\n        cuisine: \"Italian\",\n        cookingTime: 20,\n        difficulty: \"Easy\",\n        image: \"https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?w=400\",\n        ingredients: searchData.ingredients.length > 0 ? searchData.ingredients : [searchData.searchTerm],\n        tags: [\"Quick\"]\n      }];\n      setSearchResults(mockResults);\n    } else {\n      setSearchResults([]);\n    }\n  };\n  const handleFilterChange = filterData => {\n    console.log('Filter data:', filterData);\n    setFilters(filterData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(IngredientSearch, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecipeList, {\n        searchResults: searchResults,\n        filters: filters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rFABDRXU3i7hhVpiYJhrkT1voig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","IngredientSearch","FilterPanel","RecipeList","Footer","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","filters","setFilters","handleSearch","searchData","console","log","ingredients","length","searchTerm","mockResults","id","title","cuisine","cookingTime","difficulty","image","tags","handleFilterChange","filterData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onFilterChange","_c","$RefreshReg$"],"sources":["D:/קורס מפתחי AI/PROJECT AI/FoodAPP/cuisineBotApp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport IngredientSearch from \"./components/IngredientSearch\";\r\nimport FilterPanel from \"./components/FilterPanel\";\r\nimport RecipeList from \"./components/RecipeList\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"../App.css\";\r\nimport \"../styles/App.css\";\r\n\r\nfunction App() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [filters, setFilters] = useState(null);\r\n\r\n  const handleSearch = (searchData) => {\r\n    // In a real app, this would call an API\r\n    console.log('Search data:', searchData);\r\n    \r\n    // For now, we'll just set some mock search results\r\n    if (searchData.ingredients.length > 0 || searchData.searchTerm) {\r\n      // Mock search results - in real app, this would come from API\r\n      const mockResults = [\r\n        {\r\n          id: 7,\r\n          title: \"Pasta with \" + (searchData.ingredients[0] || searchData.searchTerm),\r\n          cuisine: \"Italian\",\r\n          cookingTime: 20,\r\n          difficulty: \"Easy\",\r\n          image: \"https://images.unsplash.com/photo-1621996346565-e3dbc353d2e5?w=400\",\r\n          ingredients: searchData.ingredients.length > 0 ? searchData.ingredients : [searchData.searchTerm],\r\n          tags: [\"Quick\"]\r\n        }\r\n      ];\r\n      setSearchResults(mockResults);\r\n    } else {\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (filterData) => {\r\n    console.log('Filter data:', filterData);\r\n    setFilters(filterData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        <IngredientSearch onSearch={handleSearch} />\r\n        <FilterPanel onFilterChange={handleFilterChange} />\r\n        <RecipeList searchResults={searchResults} filters={filters} />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}